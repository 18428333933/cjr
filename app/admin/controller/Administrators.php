<?php
/**
 * Created by PhpStorm.
 * User: PHP
 * Date: 2020/5/21
 * Time: 10:05
 */

namespace app\admin\controller;

use app\admin\model\Admin as AdminModel;
use app\admin\model\Role as RoleModel;
use think\facade\Log;
use think\View;

class Administrators extends Base
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model=new AdminModel();

    }

    public function index()
    {
        return parent::index(); // TODO: Change the autogenerated stub
    }

    public function administratorsAdd(){
        return view();
    }

    public function administratorsEdit(){
        $id=input("get.id");
        if($id&&$id!=0){
            $data=$this->model->alias('a')
                ->join("role","a.role_id=role.id")
                ->where("admin_id",$id)
                ->select();
            return \think\facade\View::fetch("",[
               "data"=>$data
            ]);
        }

    }

    public function administratorsLists(){
        $param=input("get.");
        $where=queryWhere($param);
        $data=$this->model->alias('a')
            ->join("role","a.role_id=role.id",'right')
            ->where($where)
            ->paginate($param["limit"],false,["query"=>request()->param()]);
        $result=[
          "code"=>0,
            "message"=>"",
            "count"=>$data->total(),
            "data"=>$data
        ];
        return $result;
    }

    public function administratorsSaved($interfaseNumber=70001){
        $data=request()->param();
        if(!empty($data)){
            switch ($data){
                case !isset($data["admin_id"])||$data["admin_id"]==0:
                    try{
                        $this->model->save($data);
                    }catch (\Exception $e){
                       Log::record("添加:".$e->getMessage());
                     return adminShow(config("code.fail"),config("message.fail"),$data,$interfaseNumber);
                    }
                    return adminShow(config("code.success"),config("message.success"),$data,$interfaseNumber);
                    break;
                case isset($data["admin_id"])&&$data["admin_id"]>0:

                    try{

                        $this->model->where("admin_id",$data["admin_id"])->update($data);
                    }catch (\Exception $e){
                        Log::record("修改:".$e->getMessage());
                        return adminShow(config("code.fail"),config("message.fail"),$data,$interfaseNumber);
                    }
                    return adminShow(config("code.success"),config("message.success"),$data,$interfaseNumber);
                    break;
            }
        }
        return adminShow(config("code.fail"),config("message.null"),$data,$interfaseNumber);
    }

    public function administratorsDelete($interfaseNumber=70002){
        $id=input("get.id");
        if($id&&$id!=0){
            try{
                $admin=$this->model->where('admin_id',$id)->delete();
            }catch (\Exception $e){
                Log::record("删除".$e->getMessage());
                return adminShow(config("code.fail"),config("message.fail"),$id,$interfaseNumber);
            }
            return adminShow(config("code.success"),config("message.success"),$id,$interfaseNumber);
        }

    }

    public function roleList(){
        $Role=new RoleModel();
        $data=$Role->select();
        return showApi(config("code.success"),config("message.success"),$data);
    }


}